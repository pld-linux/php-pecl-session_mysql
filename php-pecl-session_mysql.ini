; Enable session_mysql extension module
extension=session_mysql.so

; To enable this module globally:
;session.save_handler = "mysql"

; You can additionaly use sock and port
;session_mysql.db="host=localhost db=phpsession user=phpsession pass=phpsession"

; when inserting, retreiving and deleting session from database, add a check
; for $_SERVER['SERVER_NAME'] this disables potential security problem (when
; used in mass virtualhosting), because users cannot edit session for other
; domains $_SERVER['SERVER_NAME'] is copied to local variable before script is
; executed, so when users change $_SERVER['SERVER_NAME'] variable, it does not
; hurt
;session_mysql.hostcheck="1"

; remove "www." if exist from $_SERVER['SERVER_NAME'], so same session on
; www.example.com and example.com will work
;session_mysql.hostcheck_removewww="1"

; use persistent connection to mysql (every 1 httpd process will use 1
; connection to mysql)
;session_mysql.persistent="1"

; remove sessions older than 21600 seconds when GC (garbage collector) is waked
;session_mysql.gc_maxlifetime="21600"

; locking support via GET_LOCK()/RELEASE_LOCK(), for more information read this
; http://www.issociate.de/board/post/184369/warning_&_question_about_mysql_sessions_&_concurrency.html
;session_mysql.locking="1"

; lock timeout, default 5 seconds
;session_mysql.lock_timeout="5"

; when set to 1, return always SUCCESSFUL, so upper session functions don't log really anything
;session_mysql.quiet="0"
